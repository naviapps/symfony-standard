security:
    encoders:
        # Our user class and the algorithm we'll use to encode passwords
        # https://symfony.com/doc/current/security.html#c-encoding-the-user-s-password
        FOS\UserBundle\Model\UserInterface: bcrypt
        Naviapps\Bundle\AdminBundle\Entity\User: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username
        database_admin_users:
            entity: { class: Naviapps\Bundle\AdminBundle\Entity\User, property: username }

    # https://symfony.com/doc/current/security.html#initial-security-yml-setup-authentication
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern: ^/admin/
            provider: database_admin_users
            form_login:
                check_path: naviapps_admin_admin_security_login
                login_path: naviapps_admin_admin_security_login
                csrf_token_generator: security.csrf.token_manager
                default_target_path: admin_index
            logout:
                path: naviapps_admin_admin_security_logout
                target: naviapps_admin_admin_security_login
            anonymous: ~

        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
            logout:    ~
            anonymous: ~

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
